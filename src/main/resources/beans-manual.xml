<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

		
	<!--  What is a Spring Bean? -->
	<!--  A spring bean is something you've told Spring to manage for you! -->
	
	<!--  Below we're going to configure our message bean -->
	<bean name="FirstMessageBean" class="com.revature.beans.MessageBean"></bean>
	
	
	<!-- 
		What is Bean wiring?
			BEan wiring is the process of telling Spring to manage objects for us, while also defining 
				what those objects may have. 
			(Mostly do this with annotations in Spring Boot)
			
			Types of Injections: 
				Constructor 
				Setters 
				Field/Property 
				Interface (Extra) 
				
	 -->
	
	<!--  
		Bean Scopes: 
			Singleton (default): Tells spring to only create a single instance
			Prototype : Tell Spring to create an instance whenever someone asks for it. Also creates one as the IoC is created. 
			Request 
			Session
			GlobalSession
	 -->
	
	
	
	<!--  Manual Wiring! -->
	<!--  By default, Spring will try to instantiate with no args and then use the setters. -->
	<!--  SETTER INJECTION -->
	<bean name="UsefuleBean" class="com.revature.beans.MessageBean">
		<property name="message" value="Hello World!"/>
	</bean>
	
	<!-- CONSTRUCTOR INJECTION -->
	<bean name ="ConstructorBean" class="com.revature.beans.MessageBean" scope="prototype">
		<constructor-arg index="0" value="Message from Constructor!"/>
	</bean>
	
	<bean name="AdvancedBeanFirst" class="com.revature.beans.AdvancedBean">
		<constructor-arg index="0" ref = "ConstructorBean"/>
		<constructor-arg index="1" value="Example Name"></constructor-arg>
		<constructor-arg index="2" value="100"/>
	</bean>
	
	
</beans>